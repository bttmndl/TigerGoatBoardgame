*, *::before, *::after {
    box-sizing: border-box;
    font-family: Arial;
}

body {
  height: 100vh;
}
.Main {
    
    background-color: #333;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    font-size: 7.5vmin;
}

.brand {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgb(14, 14, 14);
}

.brand h1 {
  color: lightgreen;
}

#game-board {
    background-image: url("board.jpg");
    --grid-size : 5;
    --cell-size: 8vmin;
    --cell-gap: 8;
    display: grid;
    grid-template-columns: repeat(var(--grid-size), var(--cell-size));
    grid-template-rows: repeat(var(--grid-size), var(--cell-size));
    background-color: #CCC;
    gap: 8vmin;
    border-radius: 1vmin;
    padding: 1vmin;
    border: 2px solid rgb(9, 243, 33);
}

.cell {
    background-color: #AAA;
    border-radius: 1vmin;
    cursor: pointer;
}

.tiger {
    background-image: url("tiger.jpg");
    border: 5px solid rgb(96, 0, 249);
}

.goat {
    background-image: url("goat.jpg");
    border: 5px solid rgb(255, 1, 77);
    
}
.cellShowMove {
    background-color: red;
    border-radius: 2vmin;
}

/*optional*/
.ball {
    cursor: pointer;
    width: 40px;
    height: 40px;
    cursor: move;
}





/*..........*/
:root {
    --angle: 45deg;
    --opacity: 0.5;
  }
  
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  
  .rainbow {
    border-radius: 10px;
  
    font-size: 1.5em;
  
    --border-size: 0.3rem;
    border: var(--border-size) solid transparent;
  
    /* Paint an image in the border */
    border-image: conic-gradient(
        from var(--angle),
        #d53e33 0deg 90deg,
        #fbb300 90deg 180deg,
        #377af5 180deg 270deg,
        #399953 270deg 360deg
      )
      1 stretch;
    background: rgb(255 255 255 / var(--opacity));
  }

  @supports (background: paint(houdini)) {
    @property --opacity {
      syntax: "<number>";
      initial-value: 0.5;
      inherits: false;
    }
  
    @property --angle {
      syntax: "<angle>";
      initial-value: 0deg;
      inherits: false;
    }
  
    @keyframes opacityChange {
      to {
        --opacity: 1;
      }
    }
  
    @keyframes rotate {
      to {
        --angle: 360deg;
      }
    }
  
    .rainbow {
      animation: rotate 4s linear infinite, opacityChange 3s infinite alternate;
    }
  
    /* Hide the warning */
    .warning {
      display: none;
    }
  }
  
  
  


